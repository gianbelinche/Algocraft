<project xmlns:ivy="antlib:org.apache.ivy.ant" name="Algocraft" default="test" basedir=".">
    <property name="src" location="src"/>
    <property name="build" location="build"/>
    <property name="libs" location="libs" />

    <property name="ivy.install.version" value="2.2.0" />
    <property name="ivy.jar.dir" value="${libs}/" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
    
    <property name="cobertura.dir" location="${libs}" />
    <property name="reports.dir" location="${build}/reports" />
	<property name="reports.xml.dir" location="${reports.dir}/junit-xml" />
	<property name="reports.html.dir" location="${reports.dir}/junit-html" />
    <property name="coverage.xml.dir" location="${reports.dir}/cobertura-xml" />
	<property name="coverage.summaryxml.dir" location="${reports.dir}/cobertura-summary-xml" />
	<property name="coverage.html.dir" location="${reports.dir}/cobertura-html" />
    
    
    <path id="classpath">
        <fileset dir="${libs}">
            <include name="*.jar" />
            <include name="lib/*.jar"/>
        </fileset>
        <pathelement location="${build}" />
        <pathelement location="${build}/tests" />
    </path>
    
    <path id="cobertura.classpath">
		<fileset dir="${cobertura.dir}">
			<include name="cobertura-1.9.4.1.jar" />
			<include name="*.jar" />
		</fileset>
	</path>

    <target name="setup">
        <delete dir="${build}" />
        <mkdir dir="${build}" />
        <mkdir dir="${build}/classes" />
        <mkdir dir="${build}/tests" />
        <mkdir dir="${libs}" />
    </target>


    <target name="compilar" depends="setup,resolve">
        <javac srcdir="${src}" destdir="${build}" includes="**/*.java"/>
    </target>

    <target name="compilar.tests" depends="compilar">
        <javac srcdir="test" destdir="${build}/tests" includeantruntime="false" debug="yes" target="1.8">
            <classpath refid="classpath" />
        </javac>
    </target>

    <target name="test" depends="compilar.tests">
        <junit printsummary="on" haltonerror="yes" fork="no" failureProperty="test.failure" showoutput="true">
            <classpath location="${build}" />
            <classpath refid="classpath" />
            <classpath location="lib/junit-4.11.jar" />
            <classpath location="lib/hamcrest-core-1.3.jar" />
            <batchtest>
                <fileset dir="${build}/tests" includes="**/*Test.class" />
                <formatter type="plain" usefile="false"/>
            </batchtest>
        </junit>
    </target>
    
    <target name="coverage-report" depends="test">
		<cobertura-report srcdir="${src.dir}" destdir="${coverage.xml.dir}" format="xml" datafile="${build}/cobertura.ser" />
	</target>

    <target name="download-ivy" unless="skip.download">
        <mkdir dir="${ivy.jar.dir}" />
        <echo message="installing ivy..." />
        <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true" />
    </target>

    <target name="install-ivy" depends="download-ivy" description="--> install ivy">
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar" />
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
    </target>

    <target name="resolve" depends="install-ivy" description="--> retrieve dependencies with ivy">
        <ivy:retrieve conf="build" pattern="${libs}/[artifact]-[type]-[revision].[ext]" />
        <ivy:retrieve conf="analysis" pattern="${libs}/analysis/[artifact](-[classifier]).[ext]"/>
    </target>

</project>
